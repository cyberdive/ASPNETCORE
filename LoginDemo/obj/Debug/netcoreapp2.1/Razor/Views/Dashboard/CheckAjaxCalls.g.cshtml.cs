#pragma checksum "E:\MyApps\LoginArticle\Part2\LoginDemo\LoginDemo\Views\Dashboard\CheckAjaxCalls.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8568b5d5428d779f0c49ccec5835b3084cd341ae"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_CheckAjaxCalls), @"mvc.1.0.view", @"/Views/Dashboard/CheckAjaxCalls.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/CheckAjaxCalls.cshtml", typeof(AspNetCore.Views_Dashboard_CheckAjaxCalls))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\MyApps\LoginArticle\Part2\LoginDemo\LoginDemo\Views\_ViewImports.cshtml"
using LoginDemo;

#line default
#line hidden
#line 2 "E:\MyApps\LoginArticle\Part2\LoginDemo\LoginDemo\Views\_ViewImports.cshtml"
using LoginDemo.Models;

#line default
#line hidden
#line 4 "E:\MyApps\LoginArticle\Part2\LoginDemo\LoginDemo\Views\_ViewImports.cshtml"
using LoginDemo.CustomAttributes;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8568b5d5428d779f0c49ccec5835b3084cd341ae", @"/Views/Dashboard/CheckAjaxCalls.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ea1c9f2e549218554a4188d9097e20f5262ce186", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_CheckAjaxCalls : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\MyApps\LoginArticle\Part2\LoginDemo\LoginDemo\Views\Dashboard\CheckAjaxCalls.cshtml"
  
    ViewData["Title"] = "CheckAjaxCalls";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(99, 2559, true);
            WriteLiteral(@"
<div style=""padding-top:50px;""></div>
<div class=""row"">
    <h3>Authentication for Ajax calls</h3>
    <div style=""color:gray;"">
        When user is idle and the session expires, in this case we need to handle Ajax calls, End user session and click on Ajax Call button
    </div>
    <div style=""padding-top:30px;"">
        <span><button type=""button"" id=""btnEndSession"" onclick=""OnClick_EndSession()"" class=""btn btn-primary btn-lg rph-login-button"">End Session</button></span>
        <span style=""padding-left:30px;""><button type=""button"" id=""btnAjaxCall"" onclick=""OnClick_AuthenticateAjaxCall()"" class=""btn btn-primary btn-lg rph-login-button"">Authenticate Ajax Call</button></span>
    </div>
</div>

<div class=""row"">
    <div style=""padding-top:50px;""></div>
    <h3>Authorizarion for Ajax calls</h3>
    <div style=""color:grey;"">
        Only DIRECTOR and SUPERVISOR have permission to this Ajax call. If logged in user is an ANALYST(<span style=""color:Highlight;"">dwill@email.com, JBlack@email.com");
            WriteLiteral(@"</span>), then show Pemission Denied page.<br />
        Click the below button to check permission.
    </div>
    <div style=""padding-top:30px;"">
        <span><button type=""button"" id=""btnEndSession"" onclick=""OnClick_AuthorizeAjaxCall()"" class=""btn btn-primary btn-lg rph-login-button"">Authorize Ajax Call</button></span>
    </div>
</div>

<script>
    function OnClick_EndSession() {
        $.ajax({
            type: 'GET',
            url: '/Home/EndSession',
            data: {},
            cache: false,
            success: function (result) { }
        });
        alert(""End of User Session, Click on Ajax Call button to autneticate Ajax calls, It should take you to login page."");
    }

    function OnClick_AuthenticateAjaxCall() {
        $.ajax({
            type: 'GET',
            url: '/Dashboard/AuthenticateAjaxCalls',
            data: {},
            cache: false,
            success: function (result) {
                if (result != """")
                    alert(""Y");
            WriteLiteral(@"our session is still active, end session to see how authentication for Ajax call works!"");
            }
        });
    }

    function OnClick_AuthorizeAjaxCall() {
        $.ajax({
            type: 'GET',
            url: '/Dashboard/AuthorizeAjaxCalls',
            data: {},
            cache: false,
            success: function (result) {
                if (result != """")
                    alert(""Your have permission for this Ajax call!"");
            }
        });
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
